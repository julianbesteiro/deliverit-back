components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 

  schemas:
    Order:
      type: object
      required:
        - address
        - coords
        - packagesQuantity
        - weight
      properties:
        address:
          type: string
          example: Los Jacarandaes 2349
        coords:
          type: object
          properties:
            lat:
              type: number
              format: double
              example: 40.7128
            lng:
              type: number
              format: double
              example: -74.006
        packagesQuantity:
          type: number
          example: 10
        weight:
          type: number
          example: 3
        status:
          type: string
          example: assigned
        recipient:
          type: string
          example: Juan Quiroz
        deliveryDate:
          type: date
          example: '2020-10-10T00:00:00.000Z'

paths:
  /order/:
    post:
      tags:
        - Order
      summary: Add new order from administrator
      description: Create a new order
      operationId: addOrder
      security:
        - bearerAuth: []
      requestBody:
        description: Create a new order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/xml:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'

    get:
      tags:
        - Order
      summary: Get all orders
      produces:
        - application/json
      security:
        - bearerAuth: []
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Order'
        404:
          description: Orders not found

  /order/{id}:
    get:
      tags:
        - Order
      summary: Get specific order by id
      produces:
        - application/json
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: order object ID
          schema:
            type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/schemas/Order'
        404:
          description: Order not found

    put:
      tags:
        - Order
      summary: Update a specific order by ID
      description: Create new order
      operationId: updateOrder
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: order object ID
          schema:
            type: string
      requestBody:
        description: Create new order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/xml:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/schemas/Order'
        404:
          description: Order not found
        400:
          description: Bad Request

    patch:
      tags:
        - Order
      summary: Update specific fields of a specific order by ID
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: order object ID
          schema:
            type: string
        - in: body
          name: order
          description: Order data to update
          required: true
          schema:
            $ref: '#/components/schemas/Order'
          properties:
            id:
              type: integer
              format: int64
              example: 100000
            username:
              type: string
              example: fehguy
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/schemas/Order'
        404:
          description: Order not found
        400:
          description: Bad Request

    delete:
      tags:
        - Order
      parameters:
        - in: path
          name: id
          required: true
          description: order object ID
          schema:
            type: string
      security:
        - bearerAuth: []
      summary: Delete a specific order by ID
      responses:
        200:
          description: OK
        404:
          description: Ordenr not found
